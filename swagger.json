{
  "swagger": "2.0",
  "info": {
    "description": "REST API for the AquaPi",
    "version": "1.0.0",
    "title": "AquaPi Swagger API"
  },
  "basePath": "/api",
  "host": "aquapihome.ddns.net:8080",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ComponentSettings": {
      "post": {
        "tags": [ "Post", "ComponentSettings" ],
        "summary": "Returns the current component settings",
        "description": "Returns the current component settings",
        "operationId": "postComponentSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request object for this operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParamComponentSettingsPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ComponentSettings"
              }
            }
          }
        }
      },
      "put": {
        "tags": [ "Put", "ComponentSettings" ],
        "summary": "Sets a new component settings",
        "description": "Sets a new component settings",
        "operationId": "putComponentSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request object for this operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/Fishes": {
      "post": {
        "tags": [ "Post", "Fishes" ],
        "summary": "Returns the fishes that are inside the aquarium",
        "description": "Returns the fishes that are inside the aquarium by name and quantity",
        "operationId": "postFishes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request object for this operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParamFishes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Fishes"
              }
            }
          }
        }
      },
      "put": {
        "tags": [ "Put", "Fishes" ],
        "summary": "Sets the fishes that are in the aquarium",
        "description": "Sets the fishes that are in the aquarium",
        "operationId": "putFishes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request object for this operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fishes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Fishes"
            }
          }
        }
      }
    },
    "/Plants": {
      "post": {
        "tags": [ "Post", "Plants" ],
        "summary": "Returns the plants in the soil",
        "description": "Returns the plants in the soil",
        "operationId": "postPlants",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request object for this operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParamPlants"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plants"
              }
            }
          }
        }
      },
      "put": {
        "tags": [ "Put", "Plants" ],
        "summary": "Sets the number of plants",
        "description": "Sets the number of plants",
        "operationId": "putPlants",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request object for this operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Plants"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "ComponentSettings": {
      "description": "Data structure that holds information about all used components. Also holds the Pi Id and a timestamp.",
      "type": "object",
      "required": [
        "piid"
      ],
      "properties": {
        "piid": {
          "type": "string",
          "example": "abc123"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "waterflowsensor": {
          "$ref": "#/definitions/WaterFlowSensor"
        },
        "lightsensor": {
          "$ref": "#/definitions/LightSensor"
        },
        "waterlevelsensor": {
          "$ref": "#/definitions/WaterLevelSensor"
        },
        "waterthermometer": {
          "$ref": "#/definitions/Thermometer"
        },
        "airthermometer": {
          "$ref": "#/definitions/Thermometer"
        },
        "lamp": {
          "$ref": "#/definitions/Lamp"
        },
        "feeder": {
          "$ref": "#/definitions/Feeder"
        },
        "pump": {
          "$ref": "#/definitions/Pump"
        }
      }
    },
    "ParamComponentSettingsPost": {
      "type": "object",
      "required": [
        "piid"
      ],
      "properties": {
        "piid": {
          "type": "string",
          "example": "abc123"
        },
        "since": {
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "until": {
          "type": "string",
          "format": "date-time",
          "example": "2017-07-22T17:32:28Z"
        }
      }
    },
    "WaterFlowSensor": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "example": "0.5"
        },
        "message": {
          "type": "string",
          "example": "everything is fine"
        }
      }
    },
    "LightSensor": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "example": "0.5"
        },
        "message": {
          "type": "string",
          "example": "everything is fine"
        }
      }
    },
    "WaterLevelSensor": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "example": "0.5"
        },
        "message": {
          "type": "string",
          "example": "everything is fine"
        }
      }
    },
    "Thermometer": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "example": "22.5"
        },
        "message": {
          "type": "string",
          "example": "everything is fine"
        }
      }
    },
    "Lamp": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "example": "0.5"
        },
        "message": {
          "type": "string",
          "example": "everything is fine"
        }
      }
    },
    "Feeder": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "example": "0.5"
        },
        "message": {
          "type": "string",
          "example": "everything is fine"
        }
      }
    },
    "Pump": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "example": "0.5"
        },
        "message": {
          "type": "string",
          "example": "everything is fine"
        }
      }
    },
    "Fishes": {
      "type": "object",
      "properties": {
        "piid": {
          "type": "string",
          "example": "abc123"
        },
        "fishid": {
          "type": "string",
          "example": "1"
        },
        "name": {
          "type": "string",
          "example": "goldfish"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": "5"
        }
      }
    },
    "ParamFishes": {
      "type": "object",
      "properties": {
        "piid": {
          "type": "string"
        }
      }
    },
    "Plants": {
      "type": "object",
      "properties": {
        "piid": {
          "type": "string",
          "example": "abc123"
        },
        "plantid": {
          "type": "string",
          "example": "1"
        },
        "name": {
          "type": "string",
          "example": "basil"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": "5"
        }
      }
    },
    "ParamPlants": {
      "type": "object",
      "properties": {
        "piid": {
          "type": "string"
        }
      }
    }
  }
}